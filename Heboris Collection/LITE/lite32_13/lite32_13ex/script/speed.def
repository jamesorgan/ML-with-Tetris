//値を変える時は必ずrepverswを更新しそのファイルを残して置いてください

// BEGINNERモード
int		lvTableBeg[101] =
{
	   1,   1,   2,   3,   4,   5,   6,   8,  12,  15,	// 0*
	   1,   2,   3,   6,   8,  10,  12,  15,  20,  30,	// 1*
	   2,   4,   6,  10,  15,  20,  30,  45,  60,  60,	// 2*
	  60,  60,  60,  60,  10,  20,  30,  60,  60,  60,	// 3*
	  60,  60,  60,  60,  60,  60,  60,  60,  60,  60,	// 4*
	  60,  60,  60,  60,  60,  60,  60,  60,  60,  60,	// 5*
	 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,	// 6*
	 120, 120, 120, 120, 120, 240, 240, 240, 240, 240,	// 7*
	 240, 240, 240, 240, 240, 240, 240, 240, 240, 240,	// 8*
	 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,	// 9*
	1200
};

// TGM Masterモード前半レベルアップテーブル #1.60c3
int lvTableTgm[51] =
{
 // *00, *10, *20, *30, *40, *50, *60, *70, *80, *90
	1  , 1  , 1  , 2  , 3  , 4  , 5  , 6  , 8  , 12 ,// 0**
	15 , 15 , 15 , 15 , 23 , 23 , 23 , 23 , 30 , 30 ,// 1**
	1  , 2  , 8  , 15 , 30 , 60 , 60 , 60 , 60 , 60 ,// 2**
	120, 120, 120, 180, 180, 180, 240, 240, 240, 240,// 3**
	300, 300, 300, 300, 240, 240, 240, 180, 180, 180,// 4**
	1200
};

// Beginnerモード初期値
int	wait1_Beginner = 26;		// 固定→次
int	wait2_Beginner = 40;		// ブロック消去
int	wait3_Beginner = 28;		// 接地→固定
int	waitt_Beginner = 15;		// 横溜め

// Masterモード初期値
int	wait1_master_half = 26;		// 固定→次
int	wait2_master_half = 40;		// ブロック消去
int	wait3_master_half = 28;		// 接地→固定
int	waitt_master_half = 15;		// 横溜め

// 20Gモード初期値
int	wait1_20G_half = 26;		// 固定→次
int	wait2_20G_half = 40;		// ブロック消去
int	wait3_20G_half = 28;		// 接地→固定
int	waitt_20G_half = 12;		// 横溜め

// Master・20Gモード後半レベルアップテーブル
int		wait1_master_tbl[28] =	// 固定→次
{
//	 500, 550, 600, 650, 700, 750, 800, 850, 900, 950,1000,1050,1100,1150,1200,1250,1300,1350,1400,1450,1500,1550,1600,1650,1700,1750,1800,1850
	  25,  25,  25,  25,  19,  19,  14,  14,  14,  14,   8,   8,   7,   7,   7,   7,   7,	7,   7,   7,   7,   7,   6,   6,   5,   4,   3,   2
};
int		wait2_master_tbl[28] =	// ブロック消去
{
//	 500, 550, 600, 650, 700, 750, 800, 850, 900, 950,1000,1050,1100,1150,1200,1250,1300,1350,1400,1450,1500,1550,1600,1650,1700,1750,1800,1850
	  29,  29,  19,  19,   9,   9,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,	6,   6,   6,   6,   6,   6,   6,   4,   4,   3,   1
};
int		wait3_master_tbl[28] =	// 接地→固定
{
//	 500, 550, 600, 650, 700, 750, 800, 850, 900, 950,1000,1050,1100,1150,1200,1250,1300,1350,1400,1450,1500,1550,1600,1650,1700,1750,1800,1850
	  28,  28,  28,  28,  28,  28,  28,  28,  18,  18,  16,  16,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  14,  14,  12,  11,  10,   9
};
int		waitt_master_tbl[28] =	// 横溜め
{
//	 500, 550, 600, 650, 700, 750, 800, 850, 900, 950,1000,1050,1100,1150,1200,1250,1300,1350,1400,1450,1500,1550,1600,1650,1700,1750,1800,1850
	  10,  10,  10,  10,  10,  10,  10,  10,   9,   9,   9,   9,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   7,   6,   6,   6
};

// DEVIL-DOOMモードレベルアップテーブル
int		wait1_devil_tbl[14] =	// 固定→次
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	  11,  10,   9,   6,   6,   5,   4,   4,   4,   4,   6,   4,   3,   3
};
int		wait2_devil_tbl[14] =	// ブロック消去
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	   8,   5,   5,   4,   4,   3,   3,   3,   3,   3,   2,   2,   2,   2
};
int		wait3_devil_tbl[14] =	// 接地→固定
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	  20,  18,  16,  13,  13,  12,  11,  11,  11,  11,  11,  10,   9,   9
};
int		waitt_devil_tbl[14] =	// 横溜め
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	   9,   8,   7,   7,   7,   6,   5,   5,   5,   5,   5,   5,   5,   5
};

// DEVIL-DOOMモードレベルアップテーブル (repversw <= 7)
int		wait1_devil_tbl7[14] =	// 固定→次
{
	  11,  10,   9,   5,   5,   5,   4,   4,   4,   4,   6,   4,   3,   3
};
int		wait2_devil_tbl7[14] =	// ブロック消去
{
	   8,   5,   5,   4,   4,   3,   3,   3,   3,   3,   2,   2,   2,   2
};
int		wait3_devil_tbl7[14] =	// 接地→固定
{
	  20,  18,  16,  12,  12,  12,  11,  11,  11,  11,  11,  10,   9,   9
};
int		waitt_devil_tbl7[14] =	// 横溜め
{
	   9,   8,   7,   7,   7,   6,   5,   5,   5,   5,   5,   5,   5,   5
};

// DEVIL-DOOMモードレベルアップテーブル (repversw <= 6)
int		wait1_devil_tbl6[14] =	// 固定→次
{
	  11,   7,   6,   4,   4,   3,   3,   3,   3,   3,   4,   3,   3,   1
};
int		wait2_devil_tbl6[14] =	// ブロック消去
{
	   8,   5,   4,   4,   4,   3,   3,   3,   3,   3,   2,   2,   1,   0
};
int		wait3_devil_tbl6[14] =	// 接地→固定
{
	  20,  20,  18,  14,  14,  14,  12,  12,  12,  12,  12,  11,   9,   9
};
int		waitt_devil_tbl6[14] =	// 横溜め
{
	  10,  10,   9,   7,   7,   7,   6,   6,   6,   6,   6,   6,   5,   5
};

// DEVIL-HARDモードレベルアップテーブル
int		wait1_devil_tbl32[14] =	// 固定→次
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	  10,   9,   8,   7,   6,   5,   5,   4,   4,   3,   5,   4,   3,   2
};
int		wait2_devil_tbl32[14] =	// ブロック消去
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	   4,   4,   4,   4,   4,   3,   3,   3,   3,   3,   2,   2,   1,   0
};
int		wait3_devil_tbl32[14] =	// 接地→固定
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	  20,  20,  19,  19,  18,  17,  16,  14,  13,  13,  13,  12,  12,  10
};
int		waitt_devil_tbl32[14] =	// 横溜め
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	  10,  10,  10,   9 ,  9,   9,   9,   8,   7,   7,   6,   6,   6,   6
};

// DEVIL-NORMALモードレベルアップテーブル
int		wait1_devil_m_tbl[6] =	// 固定→次
{
//	   0, 100, 200, 300, 400, 500
	  18,  14,  14,   8,   7,   6
};
int		wait2_devil_m_tbl[6] =	// ブロック消去
{
//	   0, 100, 200, 300, 400, 500
	   8,   0,   0,   6,   5,   4
};
int		wait3_devil_m_tbl[6] =	// 接地→固定
{
//	   0, 100, 200, 300, 400, 500
	  30,  26,  22,  18,  15,  15
};
int		waitt_devil_m_tbl[6] =	// 横溜め
{
//	   0, 100, 200, 300, 400, 500
	  12,  12,  11,  10,   8,   8
};

// DEVIL-NORMALモードレベルアップテーブル (repversw <= 6)
int		wait1_devil_m_tbl6[6] =	// 固定→次
{
	  15,  14,  14,   8,   7,   7
};
int		wait2_devil_m_tbl6[6] =	// ブロック消去
{
	   8,   0,   0,   6,   5,   5
};
int		wait3_devil_m_tbl6[6] =	// 接地→固定
{
	  30,  26,  22,  18,  15,  15
};
int		waitt_devil_m_tbl6[6] =	// 横溜め
{
	  12,  12,  11,  10,   8,   8
};

// DEVILモードせり上がり用
int		devil_rise_min[14] =
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	   0,   0,   0,   0,   0,  25,  20,  10,   8,   5,   0,   0,   0,   0
};
int		devil_rise_max[14] =
{
//	   0, 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,1100,1200,1300
	   0,   0,   0,   0,   0,  35,  30,  20,  18,  15,   0,   0,   0,   0
};

// DEVILモードせり上がり用 (repversw <= 6)
int		devil_rise_min6[14] =
{
	   0,   0,   0,   0,   0,  18,  15,  10,   8,   5,   0,   0,   0,   0
};
int		devil_rise_max6[14] =
{
	   0,   0,   0,   0,   0,  20,  20,  18,  10,  10,   0,   0,   0,   0
};

// Beginnerモードロール用(TIME TRIAL, Level 200)
int	speed_beginner_roll = 1200;	// 落下速度(1200 = 20G)
int	wait1_beginner_roll = 26;	// 固定→次
int	wait2_beginner_roll = 40;	// ブロック消去
int	wait3_beginner_roll = 28;	// 接地→固定
int	waitt_beginner_roll = 15;	// 横溜め

// Master・20Gモードロール用(TIME TRIAL, Level 999)
int	speed_master_roll = 1200;	// 落下速度(1200 = 20G)
int	wait1_master_roll = 10;		// 固定→次
int	wait2_master_roll = 2;		// ブロック消去
int	wait3_master_roll = 15;		// 接地→固定
int	waitt_master_roll = 7;		// 横溜め

// HARDのMASTER&20Gロール
int	wait1_master_rollG4 = 3;	// 固定→次
int	wait2_master_rollG4 = 4;	// ブロック消去
int	wait3_master_rollG4 = 15;	// 接地→固定
int	waitt_master_rollG4 = 7;	// 横溜め

// DEVIL-DOOMモードロール
int	speed_devil_roll = 1200;	// 落下速度(1200 = 20G)
int	wait1_devil_roll = 2;		// 固定→次
int	wait2_devil_roll = 6;		// ブロック消去
int	wait3_devil_roll = 14;		// 接地→固定
int	waitt_devil_roll = 7;		// 横溜め

// DEVIL-HARDモードロール
int	wait1_devil_roll3 = 5;		// 固定→次
int	wait2_devil_roll3 = 3;		// ブロック消去
int	wait3_devil_roll3 = 13;		// 接地→固定
int	waitt_devil_roll3 = 7;		// 横溜め

// 遅延防止モード用
int	speed_limit15 = 1200;		// 落下速度(1200 = 20G)
int	wait1_limit15 = 1;			// 固定→次
int	wait2_limit15 = 0;			// ブロック消去
int	wait3_limit15 = 8;			// 接地→固定

// TOMOYOモードレベルアップテーブル #1.60c7m1
int lvTabletomoyo[31] =
{
	   1,   2,   4,   10,  15,  23,  23,  30,  30,  30,  // 0**
	   1,   4,   8,   15,  30,  60,  60,  120, 120, 120, // 1**
	   180, 180, 240, 240, 300, 300, 240, 240, 180, 180, // 2**
	1200
};

// TOMOYOモードWAIT値
int	wait1_tomoyo = 25;		// 固定→次
int	wait2_tomoyo = 39;		// ブロック消去
int	wait3_tomoyo = 28;		// 接地→固定
int	waitt_tomoyo = 16;		// 横溜め

// VERSUSモード #1.60c7p5
int	speed_versus = 1;		// 落下速度(1200 = 20G)
int	wait1_versus = 26;		// 固定→次
int	wait2_versus = 40;		// ブロック消去
int	wait3_versus = 28;		// 接地→固定
int	waitt_versus = 15;		// 横溜め

// ACEモードレベルアップテーブル
int		lvTableAce[15] =
{
	1, 3, 12, 18, 24, 30, 60, 120, 150, 180, 240, 300, 1200, 1200, 1200
};

// repversw = 1のときのACEモードレベルアップテーブル
int		lvTableAce1[15] =
{
	1, 3, 4, 8, 15, 23, 30, 60, 120, 180, 240, 300, 1200, 1200, 1200
};

// repversw = 0のときのACEモードレベルアップテーブル
int		lvTableAceOld[15] =
{
	1, 10, 20, 30, 60, 100, 130, 160, 190, 220, 240, 300, 1200, 1200, 1200
};

// ACEモードノーマルの制限時間
int		timeLimitAceNormal[15] =
{
	7200, 7200, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400, 5400
};

// ACEアナザーモード制限時間
int		timeLimitAcea[15] =
{
	3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600
};

// ACEモードWAIT値
int	wait1_Ace = 26;		// 固定→次
int	wait2_Ace = 40;		// ブロック消去
int	wait3_Ace = 28;		// 接地→固定
int	waitt_Ace = 15;		// 横溜め

// ACEアナザーモードレベルアップテーブル
int		wait1_Acea_tbl[15] =	// 固定→次
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 18,14,14,14,12,12,10,8, 7,  6,  6,  6,  6,  6,  6
};
int		wait2_Acea_tbl[15] =	// ブロック消去
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 14,8, 8, 5, 5, 5, 5, 5, 5,  5,  5,  5,  4,  4,  4
};
int		wait3_Acea_tbl[15] =	// 接地→固定
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 28,24,22,20,18,14,14,13,13,13, 13, 13, 13, 13, 13
};
int		waitt_Acea_tbl[15] =	// 横溜め
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 10,10, 9, 9, 9, 8, 8, 7, 7, 7,  7,  7,  7,  7,  7
};

// ACEアナザーモードレベルアップテーブル (repversw <= 7)
int		wait1_Acea_tbl7[15] =	// 固定→次
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 18,14,14,14,12,12,10,8, 7,  6,  5,  5,  5,  5,  5
};
int		wait2_Acea_tbl7[15] =	// ブロック消去
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 14,8, 8, 5, 5, 5, 5, 5, 5,  5,  5,  5,  4,  4,  4
};
int		wait3_Acea_tbl7[15] =	// 接地→固定
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 28,24,22,20,18,14,14,13,13,13, 12, 12, 12, 12, 12
};
int		waitt_Acea_tbl7[15] =	// 横溜め
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 10,10, 9, 9, 9, 8, 8, 7, 7, 7,  7,  7,  7,  7,  7
};

// ACEアナザーモードレベルアップテーブル (repversw <= 6)
int		wait1_Acea_tbl6[15] =	// 固定→次
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 18,14,14,14,12,12,10,8, 7,  6,  5,  5,  4,  3,  2
};
int		wait2_Acea_tbl6[15] =	// ブロック消去
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 14,8, 8, 5, 5, 5, 5, 5, 5,  5,  5,  5,  4,  4,  3
};
int		wait3_Acea_tbl6[15] =	// 接地→固定
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 28,24,22,20,18,14,14,13,13,13, 12, 12, 12, 12, 11
};
int		waitt_Acea_tbl6[15] =	// 横溜め
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 10,10, 9, 9, 9, 8, 8, 7, 7, 7,  7,  7,  7,  7,  7
};

// ハイスピード１レベルアップテーブル
int		lvTableHiSpeed1[15] =
{
	20, 30, 60, 120, 180, 240, 300, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200
};
int	wait1_HiSpeed1 = 26;		// 固定→次
int	wait2_HiSpeed1 = 40;		// ブロック消去
int	wait3_HiSpeed1 = 30;		// 接地→固定
int	waitt_HiSpeed1 = 12;		// 横溜め

// ハイスピード２レベルアップテーブル
int	wait1_HiSpeed2 = 26;		// 固定→次
int	wait2_HiSpeed2 = 40;		// ブロック消去
int	wait3_HiSpeed2 = 30;		// 接地→固定
int	waitt_HiSpeed2 = 12;		// 横溜め

// オールドスタイルレベルアップテーブル
int		lvTableHeboGB[15] =
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 30
};

int	wait1_HeboGB = 0;		// 固定→次

int	wait2_HeboGB = 60;		// ブロック消去

int		wait3_HeboGB_tbl[15] =	// 接地→固定
{
//	 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	 60,30,20,15,12,10,8, 8, 7, 6,  5,  4,  4,  3,  2
};
int		waitt_HeboGB_tbl[15] =	// 横溜め
{
//	 1,  2, 3, 4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	 15,15,14,14, 14, 13, 13, 13, 12, 12, 11, 11, 10, 10, 10
};

// オールドスタイルACレベルアップテーブル
int		lvTableHeboAC[16] = 
{
//	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	48,24,18,15,12,10, 8, 6, 4, 2,10, 8, 6, 4, 2, 1
};

int		wait1_HeboAC = 30;	// 固定→次
int		wait2_HeboAC = 42;	// ブロック消去
int		wait3_HeboAC = 30;	// 接地→固定
int		waitt_HeboAC = 20;	// 横溜め

int		lvTimerHeboAC[16] = 
{
// 自動レベルアップに必要な時間
//	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	14, 9, 9, 9, 9, 9, 9, 9, 9,14,14, 9, 9, 9, 9,14
};

// OOBAKA
int		speed_oobaka = 1200;
int		wait1_oobaka = 0;
int		wait2_oobaka = 0;
int		wait3_oobaka = 0;
int		waitt_oobaka = 5;

// ACE200 BASICモード
int		lvTableAce200Basic[20] =		// 落下速度
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	   1,   3,  15,  30,  60, 120, 180, 240, 300, 300,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200
};

int		wait1_Ace200Basic_tbl[20] =		// 固定→次
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  15,  11,  11,  11,  11,  10,   9,   5,   3,   2
};

int		wait2_Ace200Basic_tbl[20] =		// ブロック消去
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	  40,  40,  40,  30,  30,  25,  25,  25,  25,  25,  20,  15,  12,  10,   6,   5,   4,   3,   3,   3
};

int		wait3_Ace200Basic_tbl[20] =		// 接地→固定
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	  28,  28,  28,  26,  26,  26,  26,  26,  25,  25,  25,  23,  23,  23,  20,  20,  18,  18,  14,  11
};

int		waitt_Ace200Basic_tbl[20] =		// 横溜め
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  10,   9,   9,   8,   8,   7,   7,   7,   7,   7
};

int		timeLimitAce200Basic[20] =		// 制限時間
{
	1800, 1800, 1800, 1800, 1800, 1500, 1500, 1500, 1500, 1500, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 900
};

// ACE200 HELLモード／HELL-Xモード
int		timeLimitAce200Hell[20] =		// 制限時間
{
	1800, 1800, 1800, 1800, 1800, 1500, 1500, 1500, 1500, 1500, 1200, 1200, 1200, 1020, 900, 1200, 1020, 900, 840, 840
};

int		timeLimitAce200Hell22[20] =		// LITE31.4まで
{
	1800, 1800, 1800, 1800, 1800, 1500, 1500, 1500, 1500, 1500, 1200, 1200, 1200, 1200, 900, 900, 900, 840, 720, 720
};

// ACE200 VOIDモード
int		wait1_Ace200Void_tbl[20] =		// 固定→次
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	   2,   2,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

int		wait2_Ace200Void_tbl[20] =		// ブロック消去
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	   3,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

int		wait3_Ace200Void_tbl[20] =		// 接地→固定
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	  11,  10,   9,   9,   9,   9,   9,   9,   9,   9,   9,   9,   9,   9,   9,   8,   8,   8,   8,   8
};

int		waitt_Ace200Void_tbl[20] =		// 横溜め
{
//	   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20
	   7,   5,   5,   4,   4,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   2,   2,   2,   2,   2
};

int		timeLimitAce200Void[20] =		// 制限時間
{
	1800, 1200, 900, 900, 900, 840, 840, 840, 840, 840, 720, 720, 720, 720, 720, 540, 480, 420, 360, 300
};

// FINALモード (固定時間リセットあり)
int		wait1_final_srs[10] =	// 固定→次
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  1,   1,   1,   1,   1,   0,   0,   0,   0,   0
};

int		wait2_final_srs[10] =	// ブロック消去
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

int		wait3_final_srs[10] =	// 接地→固定
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  9,   8,   7,   6,   5,   5,   5,   4,   4,   3
};

int		waitt_final_srs[10] =	// 横溜め
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  4,   4,   3,   3,   2,   2,   2,   1,   1,   0
};

// FINALモード (固定時間リセットなし)
int		wait1_final_ars[10] =	// 固定→次
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  1,   1,   1,   1,   1,   0,   0,   0,   0,   0
};

int		wait2_final_ars[10] =	// ブロック消去
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

int		wait3_final_ars[10] =	// 接地→固定
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	 10,  10,   9,   8,   7,   7,   6,   5,   5,   4
};

int		waitt_final_ars[10] =	// 横溜め
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  4,   4,   3,   3,   2,   2,   2,   1,   1,   0
};

// FINALモード (repversw <= 4)
int		wait1_final4[10] =		// 固定→次
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  1,   1,   1,   1,   1,   0,   0,   0,   0,   0
};

int		wait2_final4[10] =		// ブロック消去
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

int		wait3_final4[10] =		// 接地→固定
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  9,   8,   7,   6,   5,   4,   3,   2,   2,   1
};

int		waitt_final4[10] =		// 横溜め
{
//    0, 100, 200, 300, 400, 500, 600, 700, 800, 900
	  5,   5,   4,   4,   3,   3,   2,   2,   1,   0
};

// MARATHONモード
// 通常モード（最初はスピードタイプが特殊モードだけどLV12でスピードタイプが通常モードになるので注意）
int		lvTableMarathon[15] = 
{
//	 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	60, 48, 36, 28, 22, 16, 12,  8,  6,  4,  2, 60, 180, 300, 1200
};

// ONIモード
int		wait1_Marathon_Oni[15] = 
{
//	 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	15, 14, 10,  9,  5,  3,  3,  3,  3,  2,  2,  2,  1,  0,  0
};

int		wait2_Marathon_Oni[15] = 
{
//	 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	 8,  8,  5,  5,  3,  3,  3,  3,  3,  3,  2,  1,  0,  0,  0
};

int		wait3_Marathon_Oni[15] = 
{
//	 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	30, 26, 20, 19, 17, 14, 12, 11, 11, 11, 11, 11, 10, 10,  8
};

int		waitt_Marathon_Oni[15] = 
{
//	 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
	12, 12, 10, 10,  9,  9,  6,  6,  6,  6,  6,  6,  6,  4,  2
};
