//=============================================================================
//         Luna for DiretX9
//=============================================================================
//
//		基本プロジェクトサンプル
//
//=============================================================================


//=============================================================================
// INCLUDE
//=============================================================================
#include "include.h"
#include "gamedef.h"

//=============================================================================
// DEFINE
//=============================================================================
#define FRAME_RATE				(60)

extern bool		loopFlag;

//=============================================================================
//		メッセージ処理用関数
//=============================================================================
//	メッセージの処理を行う関数です
//=============================================================================
// input
//
// return
//
//=============================================================================
bool Luna::MessageProc( long Msg, long wParam, long lParam )
{
	switch ( Msg )
	{
	// キー押下イベント
	case WM_KEYDOWN:
		switch ( wParam )
		{
		// エスケープキー
		case VK_ESCAPE:
			// 終了
			Luna::Exit();
			loopFlag = false;
			break;
		}
		break;

	// ウインドウ閉じ
	case WM_CLOSE:
		// 終了
		loopFlag = false;
		break;
	}

	return true;
}


//=============================================================================
//		アプリケーション初期設定
//=============================================================================
//	アプリケーションの初期設定を行うための関数です
//=============================================================================
// input
//
// return
//
//=============================================================================
bool Luna::Init( void )
{
	//--------------------------------------------------------
	// 出力ログ名
	//--------------------------------------------------------
	// Luna::SetLogFileName( "system_log" );

	//--------------------------------------------------------
	// アプリケーション名
	//--------------------------------------------------------
	Luna::SetApplicationName( "HEBORIS C7-EX DirectX9" );

	//--------------------------------------------------------
	// 画面情報を設定
	//--------------------------------------------------------
	Luna::SetScreenInfo( 640, 480, true );

	//--------------------------------------------------------
	// フレームレート設定
	//--------------------------------------------------------
	Luna::SetFrameRate( FRAME_RATE );

	//--------------------------------------------------------
	// アプリケーションのタイトルバーに情報を表示する
	//--------------------------------------------------------
	// Luna::SetDrawTitleInfo();

	//--------------------------------------------------------
	// 起動ログをウィンドウに出力
	//--------------------------------------------------------
	Luna::SetBootLogUse( false );

	//--------------------------------------------------------
	// 使用するオプションを設定
	//--------------------------------------------------------
	Luna::SetUseOption( OPTION_DIRECTINPUT | OPTION_DIRECTSOUND | OPTION_DIRECTMUSIC );

	return true;
}


//=============================================================================
//		メインループ
//=============================================================================
//	コンソールアプリケーションで標準の main 関数と同じものです。
//=============================================================================
// input
//		long ArgNum		: 引数の数（最低１
//		char *pArgStr[]	: 引数の文字列（最初はEXE名
//
// return
//
//=============================================================================
void Luna::Main( long ArgNum, char *pArgStr[] )
{
	//--------------------------------------------------------
	// 全システムの開始
	//--------------------------------------------------------
	if ( Luna::Start() )
	{
		//-----------------------------------------------
		// 初期化処理
		//
		//	ここに各種初期化処理を記述します。
		//-----------------------------------------------

		// カラーキー処理ＯＮ
		Luna3D::SetColorkeyEnable( false );
		// アルファブレンドタイプ
		Luna3D::SetBlendingType( BLEND_NORMAL );

		Luna3D::SetBilinearEnable( false );
		
		//-----------------------------------------------
		// ゲーム用ループ
		//
		//	Windowsアプリケーションでは while ( 1 ) などの方
		//	法でループさせてはいけないので WaitForMsgLoop()
		//	関数でウィンドウメッセージを内部で処理しています。
		//-----------------------------------------------
		gameMain();

		//--------------------------------------------------------
		// 終了処理
		//
		//	ここに各種終了処理を記述します。
		//--------------------------------------------------------

		Luna::End();
	}
}


